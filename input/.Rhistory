View(df.parents)
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
View(child_cluster)
library(plyr)
View(df.parents)
df.parents <-data.frame()
View(parents_filter)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), 1:2]
View(parents_filter)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
View(parents_filter)
df.parents <-data.frame()
name(df.parents) <- c("parent.cluster", "child.cluster")
name(df.parents) = c("parent.cluster", "child.cluster")
names(df.parents) = c("parent.cluster", "child.cluster")
df.parents <-data.frame(c(),c())
names(df.parents) = c("parent.cluster", "child.cluster")
df.parents <-data.frame(1,2)
View(df.parents)
df.parents <-data.frame(0,0)
View(df.parents)
df.parents <-data.frame(0,0)
View(df.parents)
names(df.parents) = c("parent.cluster", "child.cluster")
View(df.parents)
cluster_name = 0
View(parents_filter)
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
View(child_cluster)
match_df(df.parents, child_cluster, on = c("child"))
df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents[which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
View(df.parents)
cluster_name = 21
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
cluster_name = 1
cluster_name = 0
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
View(df.parents)
cluster_name = 21
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
cluster_name = 92
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents <- rbind(df.parents, child_cluster)
cluster_name = 105
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
is.na(child_cluster)
is.na(child_cluster)
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
is.na(child_cluster)
child_cluster
length(child_cluster)
length(child_cluster,1)
length(child_cluster[,1])
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
child_cluster <- c(cluster_name, cluster_name)
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
child_cluster = 105
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
child_cluster <- c(cluster_name, cluster_name)
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
View(df.parents)
length(child_cluster[,1])
child_cluster
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
cluster_name = 0
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
View(child_cluster)
if (length(child_cluster[,1]) == 0){
child_cluster <- c(cluster_name, cluster_name)
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
length(child_cluster[,1])
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
View(df.parents)
child_cluster$child.cluster
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
df.parents$child.cluste
df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents[which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
df.parents[which(df.parents$child.cluster),]
df.parents$child.cluster
which(df.parents$child.cluster %in% child_cluster$child.cluster)
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
child_cluster <- c(cluster_name, cluster_name)
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
which(df.parents$child.cluster %in% child_cluster$child.cluster)
df.parents(-integer(0),)
df.parents[-integer(0),]
df.parents <- df.parents[-integer(0),]
df.parents <-data.frame(0,0)
names(df.parents) = c("parent.cluster", "child.cluster")
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
df.parents$parent.cluster %in% ls.cluster
ls.cluster %in% df.parents$parent.cluster
ls.ends <- which(ls.cluster %in% df.parents$parent.cluster)
ls.ends <-ls.cluster[which(ls.cluster %in% df.parents$parent.cluster)]
ls.ends <-df.parents[which(df.parents$parent.cluster %in% ls.cluster )]
df.parents$parent.cluster
ls.ends <-df.parents[!which(df.parents$parent.cluster %in% df.parents$child.cluster), ]
View(ls.ends)
ls.ends <-df.parents[which(df.parents$parent.cluster %in% df.parents$child.cluster), ]
View(ls.ends)
ls.ends <-df.parents[-which(df.parents$parent.cluster %in% df.parents$child.cluster), ]
View(ls.ends)
df.parents[-which(df.parents$parent.cluster %in% df.parents$child.cluster), ]$parent.cluster
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
ls.ends <- df.parents[-which(df.parents$parent.cluster %in% df.parents$child.cluster), ]$parent.cluster
for (cluster_name in ls.ends){
df.parents <- rbind(df.parents, c(0, cluster_name))
}
View(df.parents)
rownames(frac.table) <- ls.cluster
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
View(frac.table)
parents <- c(1:length(ls.cluster))
rownames(frac.table)
which(rownames(frac.table) == 0)
which(rownames(frac.table) == 1)
which(rownames(frac.table) == 105)
View(df.parents)
parents <- c(1:length(ls.cluster))
parents[1]
parents[3]
df.parents[which(df.parents$child.cluster == cluster_name), 1]
for (cluster_name in ls.cluster){
parents[which(rownames(frac.table) == cluster_name)] <- df.parents[which(df.parents$child.cluster == cluster_name), 1]
}
cluster.cellularity$clusterID+1
dir.cluster.tsv = "/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/hu.cluster.tsv"
dir.loci.tsv = "/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/hu.loci.tsv"
dir.output = "/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/input"
cluster.tsv = read.table(dir.cluster.tsv, sep="\t", stringsAsFactors=F, header=T)
View(cluster.tsv)
View(cluster.tsv)
cluster.tsv[cluster.tsv$cluster_id, ] = cluster.tsv$cluster_id + 1
cluster.tsv$cluster_id = cluster.tsv$cluster_id + 1
View(cluster.tsv)
cluster_filter = cluster.tsv[!is.na(cluster.tsv$cluster_id) & cluster.tsv$size >= 5 & cluster.tsv$mean >= 0.1,]
View(cluster_filter)
fish = createFishObject(frac.table, parents, timepoints = ls.sample)
for (cluster_name in ls.cluster){
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$child.cluster == cluster_name), 1])
}
parents[1] <- 0
fish = createFishObject(frac.table, parents, timepoints = ls.sample)
c(1:ls.sample)
c(1:length(ls.sample))
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
View(df.parents)
View(cluster_filter)
View(HT.cpov)
View(child_cluster)
View(cluster_filter)
View(parents_filter)
View(HT.cpov)
View(cluster.cellularity)
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
View(df.parents)
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
for (cluster_name in ls.ends){
df.parents <- rbind(df.parents, c(0, cluster_name))
}
for (cluster_name in ls.cluster){
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 1])
}
for (cluster_name in ls.ends){
df.parents <- rbind(df.parents, c(0, cluster_name))
}
View(df.parents)
View(df.parents)
df.parents[-5,]
df.parents <- df.parents[-5,]
View(df.parents)
cluster_name = 0
parents[which(rownames(frac.table) == cluster_name)]
which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 1])
df.parents[which(df.parents$parent.cluster == cluster_name), 1]
rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 1]
for (cluster_name in ls.cluster){
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
}
which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
cluster_name = 92
which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
}
which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
cluster_name = 21
which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
df.parents[which(df.parents$parent.cluster == cluster_name), 2])
df.parents[which(df.parents$parent.cluster == cluster_name), 2]
which(rownames(frac.table) == 92)
for (cluster_name in ls.cluster){
if (cluster_name %in% ls.ends){
parents[which(rownames(frac.table) == cluster_name)] <- 0
} else{
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
}
}
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
for (cluster_name in ls.cluster){
if (cluster_name %in% ls.ends){
parents[which(rownames(frac.table) == cluster_name)] <- 0
} else{
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$parent.cluster == cluster_name), 2])
}
}
View(df.parents)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
View(df.parents)
View(parents_filter)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
ls.cluster = rev(unique(cluster.cellularity$clusterID))
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
## need to check NJtree method
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
ls.cluster = unique(cluster.cellularity$clusterID)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
ls.sample = unique(cluster.cellularity$sampleID)
ls.cluster = unique(cluster.cellularity$clusterID)
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
cluster_name = 0
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
######## generate results for createFishPlotObjects
cluster.cellularity = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.cluster.cellularity", sep="\t", stringsAsFactors=F, header=T)luster = unique(cluster.cellularity[,1])
ls.sample = unique(cluster.cellularity$sampleID)
ls.cluster = unique(cluster.cellularity$clusterID)
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
## need to check NJtree method
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
cluster.cellularity = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.cluster.cellularity", sep="\t", stringsAsFactors=F, header=T)luster = unique(cluster.cellularity[,1])
cluster.cellularity = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.cluster.cellularity", sep="\t", stringsAsFactors=F, header=T)
ls.sample = unique(cluster.cellularity$sampleID)
ls.cluster = unique(cluster.cellularity$clusterID)
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
## need to check NJtree method
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$parent.cluster %in% child_cluster$parent.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$child.cluster %in% df.parents$parent.cluster), ]$child.cluster
parents <- c(1:length(ls.cluster))
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
cluster_name = 0
child_cluster <- parents_filter[which(parents_filter$child.cluster == cluster_name), ]
View(df.parents)
View(child_cluster)
View(parents_filter)
as.data.frame(table(ls.sample))
View(cluster.cellularity)
as.data.frame(table(HT.cpov))
as.data.frame(table(HT.cpov$child.cluster))
as.data.frame(table(HT.cpov$parents_filter))
as.data.frame(table(parents_filter$child.cluster))
sort(as.data.frame(table(parents_filter$child.cluster))$Freq)
parents_filter[order(as.data.frame(table(parents_filter$child.cluster))$Freq), ]
cluster.cellularity = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.cluster.cellularity", sep="\t", stringsAsFactors=F, header=T)
ls.sample = unique(cluster.cellularity$sampleID)
ls.cluster = unique(cluster.cellularity$clusterID)
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
## need to check NJtree method
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
parents_filter[order(as.data.frame(table(parents_filter$child.cluster))$Freq), ]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$parent.cluster %in% df.parents$child.cluster), ]$parent.cluster
parents <- c(1:length(ls.cluster))
View(df.parents)
for (cluster_name in ls.cluster){
if (cluster_name %in% ls.ends){
parents[which(rownames(frac.table) == cluster_name)] <- 0
} else{
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$child.cluster == cluster_name), 1])
}
}
parients = c(3,0,4,1)
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
parents = c(3,0,4,1)
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
R --slave -e 'Cstack_info()["size"]'
R --slave -e
