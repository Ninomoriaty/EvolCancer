library(png)
library(Hmisc)
library(plotrix)
library(fishplot)
library(plyr)
cluster.cellularity = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.cluster.cellularity", sep="\t", stringsAsFactors=F, header=T)
ls.sample = unique(cluster.cellularity$sampleID)
ls.cluster = unique(cluster.cellularity$clusterID)
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
## need to check NJtree method
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
parents_filter[order(as.data.frame(table(parents_filter$child.cluster))$Freq), ]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$parent.cluster %in% df.parents$child.cluster), ]$parent.cluster
parents <- c(1:length(ls.cluster))
for (cluster_name in ls.cluster){
if (cluster_name %in% ls.ends){
parents[which(rownames(frac.table) == cluster_name)] <- 0
} else{
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$child.cluster == cluster_name), 1])
}
}
parents = c(3,0,4,1)
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
R
exit()
q()
cluster.cellularity = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.cluster.cellularity", sep="\t", stringsAsFactors=F, header=T)
ls.sample = unique(cluster.cellularity$sampleID)
ls.cluster = unique(cluster.cellularity$clusterID)
frac.c = c()
for (sample_name in ls.sample) {
sample <- cluster.cellularity[which(cluster.cellularity$sampleID == sample_name), ]$cellularity
frac.c <- c(frac.c,sample)
}
frac.table = matrix(frac.c*100, ncol = length(ls.sample))
rownames(frac.table) <- ls.cluster
colnames(frac.table) <- ls.sample
## need to check NJtree method
HT.cpov = read.table("/home/ninomoriaty/R_Project/EvolCancer/EvolCancer/Schism/0_W_results.HT.cpov", sep="\t", stringsAsFactors=F, header=T)
parents_filter <- HT.cpov[which(HT.cpov$topologyCost == 1), c("parent.cluster", "child.cluster")]
parents_filter[order(as.data.frame(table(parents_filter$child.cluster))$Freq), ]
df.parents <- data.frame(parent.cluster = c(NA), child.cluster = c(NA))
for (cluster_name in ls.cluster){
child_cluster <- parents_filter[which(parents_filter$parent.cluster == cluster_name), ]
if (length(child_cluster[,1]) == 0){
next()
} else {
df.parents <- df.parents[-which(df.parents$child.cluster %in% child_cluster$child.cluster),]
}
df.parents <- rbind(df.parents, child_cluster)
}
ls.ends <- df.parents[-which(df.parents$parent.cluster %in% df.parents$child.cluster), ]$parent.cluster
parents <- c(1:length(ls.cluster))
for (cluster_name in ls.cluster){
if (cluster_name %in% ls.ends){
parents[which(rownames(frac.table) == cluster_name)] <- 0
} else{
parents[which(rownames(frac.table) == cluster_name)] <- which(rownames(frac.table) == df.parents[which(df.parents$child.cluster == cluster_name), 1])
}
}
parents = c(3,0,4,1)
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
library(png)
library(Hmisc)
library(plotrix)
library(fishplot)
fish = createFishObject(frac.table, parents, timepoints = c(1:length(ls.sample)))
